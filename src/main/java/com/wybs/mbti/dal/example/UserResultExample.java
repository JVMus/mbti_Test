package com.wybs.mbti.dal.example;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserResultExample {
    /**
     * This field was generated by MyBatis Generator.
     * <p>This field corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * <p>This field corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * <p>This field corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * <p>This field corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    protected Long offset;

    /**
     * This field was generated by MyBatis Generator.
     * <p>This field corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    protected Integer limit;

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public UserResultExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        offset = null;
        limit = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public void setOffset(Long offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public Long getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public Integer getLimit() {
        return this.limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * <p>This method corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public UserResultExample bound(Long offset, Integer limit) {
        this.offset = offset;
        this.limit = limit;
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * <p>This class corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("mr.id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("mr.id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("mr.id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("mr.id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("mr.id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("mr.id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("mr.id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("mr.id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("mr.id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("mr.id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("mr.id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("mr.id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUudIdIsNull() {
            addCriterion("mr.uud_id is null");
            return (Criteria) this;
        }

        public Criteria andUudIdIsNotNull() {
            addCriterion("mr.uud_id is not null");
            return (Criteria) this;
        }

        public Criteria andUudIdEqualTo(Integer value) {
            addCriterion("mr.uud_id =", value, "uudId");
            return (Criteria) this;
        }

        public Criteria andUudIdNotEqualTo(Integer value) {
            addCriterion("mr.uud_id <>", value, "uudId");
            return (Criteria) this;
        }

        public Criteria andUudIdGreaterThan(Integer value) {
            addCriterion("mr.uud_id >", value, "uudId");
            return (Criteria) this;
        }

        public Criteria andUudIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("mr.uud_id >=", value, "uudId");
            return (Criteria) this;
        }

        public Criteria andUudIdLessThan(Integer value) {
            addCriterion("mr.uud_id <", value, "uudId");
            return (Criteria) this;
        }

        public Criteria andUudIdLessThanOrEqualTo(Integer value) {
            addCriterion("mr.uud_id <=", value, "uudId");
            return (Criteria) this;
        }

        public Criteria andUudIdIn(List<Integer> values) {
            addCriterion("mr.uud_id in", values, "uudId");
            return (Criteria) this;
        }

        public Criteria andUudIdNotIn(List<Integer> values) {
            addCriterion("mr.uud_id not in", values, "uudId");
            return (Criteria) this;
        }

        public Criteria andUudIdBetween(Integer value1, Integer value2) {
            addCriterion("mr.uud_id between", value1, value2, "uudId");
            return (Criteria) this;
        }

        public Criteria andUudIdNotBetween(Integer value1, Integer value2) {
            addCriterion("mr.uud_id not between", value1, value2, "uudId");
            return (Criteria) this;
        }

        public Criteria andIsFinishIsNull() {
            addCriterion("mr.is_finish is null");
            return (Criteria) this;
        }

        public Criteria andIsFinishIsNotNull() {
            addCriterion("mr.is_finish is not null");
            return (Criteria) this;
        }

        public Criteria andIsFinishEqualTo(Integer value) {
            addCriterion("mr.is_finish =", value, "isFinish");
            return (Criteria) this;
        }

        public Criteria andIsFinishNotEqualTo(Integer value) {
            addCriterion("mr.is_finish <>", value, "isFinish");
            return (Criteria) this;
        }

        public Criteria andIsFinishGreaterThan(Integer value) {
            addCriterion("mr.is_finish >", value, "isFinish");
            return (Criteria) this;
        }

        public Criteria andIsFinishGreaterThanOrEqualTo(Integer value) {
            addCriterion("mr.is_finish >=", value, "isFinish");
            return (Criteria) this;
        }

        public Criteria andIsFinishLessThan(Integer value) {
            addCriterion("mr.is_finish <", value, "isFinish");
            return (Criteria) this;
        }

        public Criteria andIsFinishLessThanOrEqualTo(Integer value) {
            addCriterion("mr.is_finish <=", value, "isFinish");
            return (Criteria) this;
        }

        public Criteria andIsFinishIn(List<Integer> values) {
            addCriterion("mr.is_finish in", values, "isFinish");
            return (Criteria) this;
        }

        public Criteria andIsFinishNotIn(List<Integer> values) {
            addCriterion("mr.is_finish not in", values, "isFinish");
            return (Criteria) this;
        }

        public Criteria andIsFinishBetween(Integer value1, Integer value2) {
            addCriterion("mr.is_finish between", value1, value2, "isFinish");
            return (Criteria) this;
        }

        public Criteria andIsFinishNotBetween(Integer value1, Integer value2) {
            addCriterion("mr.is_finish not between", value1, value2, "isFinish");
            return (Criteria) this;
        }

        public Criteria andETotalIsNull() {
            addCriterion("mr.E_total is null");
            return (Criteria) this;
        }

        public Criteria andETotalIsNotNull() {
            addCriterion("mr.E_total is not null");
            return (Criteria) this;
        }

        public Criteria andETotalEqualTo(Double value) {
            addCriterion("mr.E_total =", value, "eTotal");
            return (Criteria) this;
        }

        public Criteria andETotalNotEqualTo(Double value) {
            addCriterion("mr.E_total <>", value, "eTotal");
            return (Criteria) this;
        }

        public Criteria andETotalGreaterThan(Double value) {
            addCriterion("mr.E_total >", value, "eTotal");
            return (Criteria) this;
        }

        public Criteria andETotalGreaterThanOrEqualTo(Double value) {
            addCriterion("mr.E_total >=", value, "eTotal");
            return (Criteria) this;
        }

        public Criteria andETotalLessThan(Double value) {
            addCriterion("mr.E_total <", value, "eTotal");
            return (Criteria) this;
        }

        public Criteria andETotalLessThanOrEqualTo(Double value) {
            addCriterion("mr.E_total <=", value, "eTotal");
            return (Criteria) this;
        }

        public Criteria andETotalIn(List<Double> values) {
            addCriterion("mr.E_total in", values, "eTotal");
            return (Criteria) this;
        }

        public Criteria andETotalNotIn(List<Double> values) {
            addCriterion("mr.E_total not in", values, "eTotal");
            return (Criteria) this;
        }

        public Criteria andETotalBetween(Double value1, Double value2) {
            addCriterion("mr.E_total between", value1, value2, "eTotal");
            return (Criteria) this;
        }

        public Criteria andETotalNotBetween(Double value1, Double value2) {
            addCriterion("mr.E_total not between", value1, value2, "eTotal");
            return (Criteria) this;
        }

        public Criteria andITotalIsNull() {
            addCriterion("mr.I_total is null");
            return (Criteria) this;
        }

        public Criteria andITotalIsNotNull() {
            addCriterion("mr.I_total is not null");
            return (Criteria) this;
        }

        public Criteria andITotalEqualTo(Double value) {
            addCriterion("mr.I_total =", value, "iTotal");
            return (Criteria) this;
        }

        public Criteria andITotalNotEqualTo(Double value) {
            addCriterion("mr.I_total <>", value, "iTotal");
            return (Criteria) this;
        }

        public Criteria andITotalGreaterThan(Double value) {
            addCriterion("mr.I_total >", value, "iTotal");
            return (Criteria) this;
        }

        public Criteria andITotalGreaterThanOrEqualTo(Double value) {
            addCriterion("mr.I_total >=", value, "iTotal");
            return (Criteria) this;
        }

        public Criteria andITotalLessThan(Double value) {
            addCriterion("mr.I_total <", value, "iTotal");
            return (Criteria) this;
        }

        public Criteria andITotalLessThanOrEqualTo(Double value) {
            addCriterion("mr.I_total <=", value, "iTotal");
            return (Criteria) this;
        }

        public Criteria andITotalIn(List<Double> values) {
            addCriterion("mr.I_total in", values, "iTotal");
            return (Criteria) this;
        }

        public Criteria andITotalNotIn(List<Double> values) {
            addCriterion("mr.I_total not in", values, "iTotal");
            return (Criteria) this;
        }

        public Criteria andITotalBetween(Double value1, Double value2) {
            addCriterion("mr.I_total between", value1, value2, "iTotal");
            return (Criteria) this;
        }

        public Criteria andITotalNotBetween(Double value1, Double value2) {
            addCriterion("mr.I_total not between", value1, value2, "iTotal");
            return (Criteria) this;
        }

        public Criteria andSTotalIsNull() {
            addCriterion("mr.S_total is null");
            return (Criteria) this;
        }

        public Criteria andSTotalIsNotNull() {
            addCriterion("mr.S_total is not null");
            return (Criteria) this;
        }

        public Criteria andSTotalEqualTo(Double value) {
            addCriterion("mr.S_total =", value, "sTotal");
            return (Criteria) this;
        }

        public Criteria andSTotalNotEqualTo(Double value) {
            addCriterion("mr.S_total <>", value, "sTotal");
            return (Criteria) this;
        }

        public Criteria andSTotalGreaterThan(Double value) {
            addCriterion("mr.S_total >", value, "sTotal");
            return (Criteria) this;
        }

        public Criteria andSTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("mr.S_total >=", value, "sTotal");
            return (Criteria) this;
        }

        public Criteria andSTotalLessThan(Double value) {
            addCriterion("mr.S_total <", value, "sTotal");
            return (Criteria) this;
        }

        public Criteria andSTotalLessThanOrEqualTo(Double value) {
            addCriterion("mr.S_total <=", value, "sTotal");
            return (Criteria) this;
        }

        public Criteria andSTotalIn(List<Double> values) {
            addCriterion("mr.S_total in", values, "sTotal");
            return (Criteria) this;
        }

        public Criteria andSTotalNotIn(List<Double> values) {
            addCriterion("mr.S_total not in", values, "sTotal");
            return (Criteria) this;
        }

        public Criteria andSTotalBetween(Double value1, Double value2) {
            addCriterion("mr.S_total between", value1, value2, "sTotal");
            return (Criteria) this;
        }

        public Criteria andSTotalNotBetween(Double value1, Double value2) {
            addCriterion("mr.S_total not between", value1, value2, "sTotal");
            return (Criteria) this;
        }

        public Criteria andNTotalIsNull() {
            addCriterion("mr.N_total is null");
            return (Criteria) this;
        }

        public Criteria andNTotalIsNotNull() {
            addCriterion("mr.N_total is not null");
            return (Criteria) this;
        }

        public Criteria andNTotalEqualTo(Double value) {
            addCriterion("mr.N_total =", value, "nTotal");
            return (Criteria) this;
        }

        public Criteria andNTotalNotEqualTo(Double value) {
            addCriterion("mr.N_total <>", value, "nTotal");
            return (Criteria) this;
        }

        public Criteria andNTotalGreaterThan(Double value) {
            addCriterion("mr.N_total >", value, "nTotal");
            return (Criteria) this;
        }

        public Criteria andNTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("mr.N_total >=", value, "nTotal");
            return (Criteria) this;
        }

        public Criteria andNTotalLessThan(Double value) {
            addCriterion("mr.N_total <", value, "nTotal");
            return (Criteria) this;
        }

        public Criteria andNTotalLessThanOrEqualTo(Double value) {
            addCriterion("mr.N_total <=", value, "nTotal");
            return (Criteria) this;
        }

        public Criteria andNTotalIn(List<Double> values) {
            addCriterion("mr.N_total in", values, "nTotal");
            return (Criteria) this;
        }

        public Criteria andNTotalNotIn(List<Double> values) {
            addCriterion("mr.N_total not in", values, "nTotal");
            return (Criteria) this;
        }

        public Criteria andNTotalBetween(Double value1, Double value2) {
            addCriterion("mr.N_total between", value1, value2, "nTotal");
            return (Criteria) this;
        }

        public Criteria andNTotalNotBetween(Double value1, Double value2) {
            addCriterion("mr.N_total not between", value1, value2, "nTotal");
            return (Criteria) this;
        }

        public Criteria andTTotalIsNull() {
            addCriterion("mr.T_total is null");
            return (Criteria) this;
        }

        public Criteria andTTotalIsNotNull() {
            addCriterion("mr.T_total is not null");
            return (Criteria) this;
        }

        public Criteria andTTotalEqualTo(Double value) {
            addCriterion("mr.T_total =", value, "tTotal");
            return (Criteria) this;
        }

        public Criteria andTTotalNotEqualTo(Double value) {
            addCriterion("mr.T_total <>", value, "tTotal");
            return (Criteria) this;
        }

        public Criteria andTTotalGreaterThan(Double value) {
            addCriterion("mr.T_total >", value, "tTotal");
            return (Criteria) this;
        }

        public Criteria andTTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("mr.T_total >=", value, "tTotal");
            return (Criteria) this;
        }

        public Criteria andTTotalLessThan(Double value) {
            addCriterion("mr.T_total <", value, "tTotal");
            return (Criteria) this;
        }

        public Criteria andTTotalLessThanOrEqualTo(Double value) {
            addCriterion("mr.T_total <=", value, "tTotal");
            return (Criteria) this;
        }

        public Criteria andTTotalIn(List<Double> values) {
            addCriterion("mr.T_total in", values, "tTotal");
            return (Criteria) this;
        }

        public Criteria andTTotalNotIn(List<Double> values) {
            addCriterion("mr.T_total not in", values, "tTotal");
            return (Criteria) this;
        }

        public Criteria andTTotalBetween(Double value1, Double value2) {
            addCriterion("mr.T_total between", value1, value2, "tTotal");
            return (Criteria) this;
        }

        public Criteria andTTotalNotBetween(Double value1, Double value2) {
            addCriterion("mr.T_total not between", value1, value2, "tTotal");
            return (Criteria) this;
        }

        public Criteria andFTotalIsNull() {
            addCriterion("mr.F_total is null");
            return (Criteria) this;
        }

        public Criteria andFTotalIsNotNull() {
            addCriterion("mr.F_total is not null");
            return (Criteria) this;
        }

        public Criteria andFTotalEqualTo(Double value) {
            addCriterion("mr.F_total =", value, "fTotal");
            return (Criteria) this;
        }

        public Criteria andFTotalNotEqualTo(Double value) {
            addCriterion("mr.F_total <>", value, "fTotal");
            return (Criteria) this;
        }

        public Criteria andFTotalGreaterThan(Double value) {
            addCriterion("mr.F_total >", value, "fTotal");
            return (Criteria) this;
        }

        public Criteria andFTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("mr.F_total >=", value, "fTotal");
            return (Criteria) this;
        }

        public Criteria andFTotalLessThan(Double value) {
            addCriterion("mr.F_total <", value, "fTotal");
            return (Criteria) this;
        }

        public Criteria andFTotalLessThanOrEqualTo(Double value) {
            addCriterion("mr.F_total <=", value, "fTotal");
            return (Criteria) this;
        }

        public Criteria andFTotalIn(List<Double> values) {
            addCriterion("mr.F_total in", values, "fTotal");
            return (Criteria) this;
        }

        public Criteria andFTotalNotIn(List<Double> values) {
            addCriterion("mr.F_total not in", values, "fTotal");
            return (Criteria) this;
        }

        public Criteria andFTotalBetween(Double value1, Double value2) {
            addCriterion("mr.F_total between", value1, value2, "fTotal");
            return (Criteria) this;
        }

        public Criteria andFTotalNotBetween(Double value1, Double value2) {
            addCriterion("mr.F_total not between", value1, value2, "fTotal");
            return (Criteria) this;
        }

        public Criteria andJTotalIsNull() {
            addCriterion("mr.J_total is null");
            return (Criteria) this;
        }

        public Criteria andJTotalIsNotNull() {
            addCriterion("mr.J_total is not null");
            return (Criteria) this;
        }

        public Criteria andJTotalEqualTo(Double value) {
            addCriterion("mr.J_total =", value, "jTotal");
            return (Criteria) this;
        }

        public Criteria andJTotalNotEqualTo(Double value) {
            addCriterion("mr.J_total <>", value, "jTotal");
            return (Criteria) this;
        }

        public Criteria andJTotalGreaterThan(Double value) {
            addCriterion("mr.J_total >", value, "jTotal");
            return (Criteria) this;
        }

        public Criteria andJTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("mr.J_total >=", value, "jTotal");
            return (Criteria) this;
        }

        public Criteria andJTotalLessThan(Double value) {
            addCriterion("mr.J_total <", value, "jTotal");
            return (Criteria) this;
        }

        public Criteria andJTotalLessThanOrEqualTo(Double value) {
            addCriterion("mr.J_total <=", value, "jTotal");
            return (Criteria) this;
        }

        public Criteria andJTotalIn(List<Double> values) {
            addCriterion("mr.J_total in", values, "jTotal");
            return (Criteria) this;
        }

        public Criteria andJTotalNotIn(List<Double> values) {
            addCriterion("mr.J_total not in", values, "jTotal");
            return (Criteria) this;
        }

        public Criteria andJTotalBetween(Double value1, Double value2) {
            addCriterion("mr.J_total between", value1, value2, "jTotal");
            return (Criteria) this;
        }

        public Criteria andJTotalNotBetween(Double value1, Double value2) {
            addCriterion("mr.J_total not between", value1, value2, "jTotal");
            return (Criteria) this;
        }

        public Criteria andPTotalIsNull() {
            addCriterion("mr.P_total is null");
            return (Criteria) this;
        }

        public Criteria andPTotalIsNotNull() {
            addCriterion("mr.P_total is not null");
            return (Criteria) this;
        }

        public Criteria andPTotalEqualTo(Double value) {
            addCriterion("mr.P_total =", value, "pTotal");
            return (Criteria) this;
        }

        public Criteria andPTotalNotEqualTo(Double value) {
            addCriterion("mr.P_total <>", value, "pTotal");
            return (Criteria) this;
        }

        public Criteria andPTotalGreaterThan(Double value) {
            addCriterion("mr.P_total >", value, "pTotal");
            return (Criteria) this;
        }

        public Criteria andPTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("mr.P_total >=", value, "pTotal");
            return (Criteria) this;
        }

        public Criteria andPTotalLessThan(Double value) {
            addCriterion("mr.P_total <", value, "pTotal");
            return (Criteria) this;
        }

        public Criteria andPTotalLessThanOrEqualTo(Double value) {
            addCriterion("mr.P_total <=", value, "pTotal");
            return (Criteria) this;
        }

        public Criteria andPTotalIn(List<Double> values) {
            addCriterion("mr.P_total in", values, "pTotal");
            return (Criteria) this;
        }

        public Criteria andPTotalNotIn(List<Double> values) {
            addCriterion("mr.P_total not in", values, "pTotal");
            return (Criteria) this;
        }

        public Criteria andPTotalBetween(Double value1, Double value2) {
            addCriterion("mr.P_total between", value1, value2, "pTotal");
            return (Criteria) this;
        }

        public Criteria andPTotalNotBetween(Double value1, Double value2) {
            addCriterion("mr.P_total not between", value1, value2, "pTotal");
            return (Criteria) this;
        }

        public Criteria andResultCodeIsNull() {
            addCriterion("mr.result_code is null");
            return (Criteria) this;
        }

        public Criteria andResultCodeIsNotNull() {
            addCriterion("mr.result_code is not null");
            return (Criteria) this;
        }

        public Criteria andResultCodeEqualTo(String value) {
            addCriterion("mr.result_code =", value, "resultCode");
            return (Criteria) this;
        }

        public Criteria andResultCodeNotEqualTo(String value) {
            addCriterion("mr.result_code <>", value, "resultCode");
            return (Criteria) this;
        }

        public Criteria andResultCodeGreaterThan(String value) {
            addCriterion("mr.result_code >", value, "resultCode");
            return (Criteria) this;
        }

        public Criteria andResultCodeGreaterThanOrEqualTo(String value) {
            addCriterion("mr.result_code >=", value, "resultCode");
            return (Criteria) this;
        }

        public Criteria andResultCodeLessThan(String value) {
            addCriterion("mr.result_code <", value, "resultCode");
            return (Criteria) this;
        }

        public Criteria andResultCodeLessThanOrEqualTo(String value) {
            addCriterion("mr.result_code <=", value, "resultCode");
            return (Criteria) this;
        }

        public Criteria andResultCodeLike(String value) {
            addCriterion("mr.result_code like", value, "resultCode");
            return (Criteria) this;
        }

        public Criteria andResultCodeNotLike(String value) {
            addCriterion("mr.result_code not like", value, "resultCode");
            return (Criteria) this;
        }

        public Criteria andResultCodeIn(List<String> values) {
            addCriterion("mr.result_code in", values, "resultCode");
            return (Criteria) this;
        }

        public Criteria andResultCodeNotIn(List<String> values) {
            addCriterion("mr.result_code not in", values, "resultCode");
            return (Criteria) this;
        }

        public Criteria andResultCodeBetween(String value1, String value2) {
            addCriterion("mr.result_code between", value1, value2, "resultCode");
            return (Criteria) this;
        }

        public Criteria andResultCodeNotBetween(String value1, String value2) {
            addCriterion("mr.result_code not between", value1, value2, "resultCode");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("mr.create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("mr.create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("mr.create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("mr.create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("mr.create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("mr.create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("mr.create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("mr.create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("mr.create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("mr.create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("mr.create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("mr.create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("mr.update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("mr.update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("mr.update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("mr.update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("mr.update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("mr.update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("mr.update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("mr.update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("mr.update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("mr.update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("mr.update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("mr.update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * <p>This class corresponds to the database table mt_user_result
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * <p>This class corresponds to the database table mt_user_result
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}